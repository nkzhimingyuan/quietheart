openssl
openssl是一个集合了各种加密和消息摘要等算法的工具。
具体介绍待更新。


举例：
对于AES128CBC算法，

*查看其使用帮助信息：
$openssl enc help
输入之后，输出大致如下：
unknown option 'help'
options are
-in <file>     input file
-out <file>    output file
-pass <arg>    pass phrase source
-e             encrypt
-d             decrypt
-a/-base64     base64 encode/decode, depending on encryption flag
-k             passphrase is the next argument
-kfile         passphrase is the first line of the file argument
-md            the next argument is the md to use to create a key
                 from a passphrase.  One of md2, md5, sha or sha1
-S             salt in hex is the next argument
-K/-iv         key/iv in hex is the next argument
-[pP]          print the iv/key (then exit if -P)
-bufsize <n>   buffer size
-nopad         disable standard block padding
-engine e      use engine e, possibly a hardware device.
Cipher Types
-aes-128-cbc               -aes-128-cbc-hmac-sha1     -aes-128-cfb              
-aes-128-cfb1              -aes-128-cfb8              -aes-128-ctr              
-aes-128-ecb               -aes-128-gcm               -aes-128-ofb              
-aes-128-xts               -aes-192-cbc               -aes-192-cfb              
-aes-192-cfb1              -aes-192-cfb8              -aes-192-ctr              
-aes-192-ecb               -aes-192-gcm               -aes-192-ofb              
-aes-256-cbc               -aes-256-cbc-hmac-sha1     -aes-256-cfb              
-aes-256-cfb1              -aes-256-cfb8              -aes-256-ctr              
-aes-256-ecb               -aes-256-gcm               -aes-256-ofb              
-aes-256-xts               -aes128                    -aes192                   
-aes256                    -bf                        -bf-cbc                   
-bf-cfb                    -bf-ecb                    -bf-ofb                   
-blowfish                  -camellia-128-cbc          -camellia-128-cfb         
-camellia-128-cfb1         -camellia-128-cfb8         -camellia-128-ecb         
-camellia-128-ofb          -camellia-192-cbc          -camellia-192-cfb         
-camellia-192-cfb1         -camellia-192-cfb8         -camellia-192-ecb         
-camellia-192-ofb          -camellia-256-cbc          -camellia-256-cfb         
-camellia-256-cfb1         -camellia-256-cfb8         -camellia-256-ecb         
-camellia-256-ofb          -camellia128               -camellia192              
-camellia256               -cast                      -cast-cbc                 
-cast5-cbc                 -cast5-cfb                 -cast5-ecb                
-cast5-ofb                 -des                       -des-cbc                  
-des-cfb                   -des-cfb1                  -des-cfb8                 
-des-ecb                   -des-ede                   -des-ede-cbc              
-des-ede-cfb               -des-ede-ofb               -des-ede3                 
-des-ede3-cbc              -des-ede3-cfb              -des-ede3-cfb1            
-des-ede3-cfb8             -des-ede3-ofb              -des-ofb                  
-des3                      -desx                      -desx-cbc                 
-id-aes128-GCM             -id-aes192-GCM             -id-aes256-GCM            
-rc2                       -rc2-40-cbc                -rc2-64-cbc               
-rc2-cbc                   -rc2-cfb                   -rc2-ecb                  
-rc2-ofb                   -rc4                       -rc4-40                   
-rc4-hmac-md5              -seed                      -seed-cbc                 
-seed-cfb                  -seed-ecb                  -seed-ofb                 
这里，其实没有帮助信息的命令，只不过这里的'help'是一个非法的字符串，借由此，openssl工具打印出相应的帮助信息。

*设置好16进制的密码和初始向量，然后显示设置的密码和初始向量：
$openssl enc -aes-128-cbc -K 2b7e151628aed2a6abf7158809cf4f3c -iv 000102030405060708090A0B0C0D0E0F -P
输出大致如下：
salt=0700000000000000
key=2B7E151628AED2A6ABF7158809CF4F3C
iv =000102030405060708090A0B0C0D0E0F
这里，这个命令的含义是：enc指定使用加密指令；-aes-128-cbc指定使用aes-128-cbc算法；-K以16进制方式指定加密密码；-iv以16进制方式指定加密初始向量；-P指定打印出密码和初始向量然后退出，如果使用-p将会打印之后不退出，而是进入交互界面。



参考：
http://www.inconteam.com/software-development/41-encryption/55-aes-test-vectors#aes-cbc-128

参考：
http://blog.csdn.net/g710710/article/details/7259011
http://linux.chinaunix.net/techdoc/net/2006/08/04/937500.shtml

  对于AES-CBC算法，input buffer的长度和output buffer的长度的问题，可以总结如下：
1.	如果输入buffer的长度不是16的倍数,那么处理时需要有padding的动作，那么output buffer的长度就会增加；
2.	如果输入buffer的长度是16的倍数，那么input buffer的长度和output buffer的长度是一致的；

